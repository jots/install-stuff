
set-option -g status-interval 1
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'
set -g allow-rename on

# for mouse garbage
set -g set-clipboard off

set-option -g prefix 'C-\'
unbind-key 'C-\'
bind-key 'C-\' send-prefix   #' comment quote...

# renumber windows automagically
# http://unix.stackexchange.com/questions/21742/renumbering-windows-in-tmux
set-option -g renumber-windows on

# pretty big scrollback
set -g history-limit 100000 # 100_000

# http://superuser.com/questions/343572/how-do-i-reorder-tmux-windows
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# XXX how to make this a toggle?
bind m set -g mouse on \;   display 'Mouse: ON';
bind M set -g mouse off \;   display 'Mouse: Off'

# \ z to toggle zoom on pane
bind -n M-e resize-pane -Z
bind R refresh-client


# alt-arrow to switch "windows"
bind -n M-Right next-window
bind -n M-Left previous-window



# navigate panes (shiftkey-arrow)
bind -n S-Left select-pane -L
bind -n S-Right select-pane -R
bind -n S-Up select-pane -U
bind -n S-Down select-pane -D

# create new panes with ctrl-up/ctrl-down
# ctrl-down, ctrl-up
bind -n C-Up split-window -v -b -c "#{pane_current_path}"
bind -n C-Down split-window -v -c "#{pane_current_path}"
bind -n C-Left split-window -h -b -c "#{pane_current_path}"
bind -n C-Right split-window -h -c "#{pane_current_path}"


#bind-key 'C-\' last-pane  #'
bind-key 'C-\' last-window  #' 
# create new window just to the right of current window, not at end
bind c new-window -a


# tmuxstart https://github.com/treyhunner/tmuxstart
bind S command-prompt -p "Make/attach session:" "new-window 'tmuxstart \'%%\''"

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded .tmux.conf"

# start window numbering at 1 for easier switching
set -g base-index 1

# listen to alerts from all windows
set -g bell-action any
#setw -g window-status-bell-bg white
set -g window-status-bell-style bg=white,fg=red,bright
#setw -g window-status-bell-fg red



# change style of active pane
set -g window-style 'fg=colour247,bg=colour236'
set -g window-active-style 'fg=colour255,bg=black'

# colors:
# https://upload.wikimedia.org/wikipedia/commons/1/15/Xterm_256color_chart.svg

set-option -g status-bg colour033 

setw -g window-status-style fg=white,bold

setw -g window-status-current-format ' #I#[fg=colour249]:#[fg=colour255]#W#[fg=colour249]#F '
setw -g window-status-current-style fg=white,bg=colour19,bold

# Feel free to NOT use this variables at all (remove, rename)
# this are named colors, just for convenience
color_orange="colour166" # 208, 166
color_purple="colour134" # 135, 134
color_green="colour076" # 070
color_blue="colour39"
color_yellow="colour220"
color_red="colour160"
color_black="colour232"
color_white="white" # 015

# This is a theme CONTRACT, you are required to define variables below
# Change values, but not remove/rename variables itself
color_dark="$color_black"
color_light="$color_white"
color_session_text="$color_blue"
color_status_text="$color_black" #"colour245"
color_main="$color_orange"
color_secondary="$color_white" #"$color_purple"
color_level_ok="$color_green"
color_level_warn="$color_yellow"
color_level_stress="$color_red"
color_window_off_indicator="colour088"
color_window_off_status_bg="colour238"
color_window_off_status_current_bg="colour254"


# ==============================================
# ===   Nesting local and remote sessions     ===
# ==============================================
# https://medium.freecodecamp.org/tmux-in-practice-local-and-nested-remote-tmux-sessions-4f7ba5db8795
# https://github.com/samoshkin/tmux-config/

# Session is considered to be remote when we ssh into host
#if-shell 'test -n "$SSH_CLIENT"' \
#    'source-file ~/.tmux/tmux.remote.conf'
if-shell 'test -n "$SSH_CLIENT"' \
  'set -g status-position top'
# We want to have single prefix key "C-a", usable both for local and remote session
# we don't want to "C-a" + "a" approach either
# Idea is to turn off all key bindings and prefix handling on local session,
# so that all keystrokes are passed to inner/remote session

# see: toggle on/off all keybindings · Issue #237 · tmux/tmux - https://github.com/tmux/tmux/issues/237

# Also, change some visual styles when window keys are off
bind -T root C-q  \
    set prefix None \;\
    set key-table off \;\
    set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
    #set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
    set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]#[default]" \;\
    set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    refresh-client -S \;\

bind -T off C-q \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S



bind t choose-tree
